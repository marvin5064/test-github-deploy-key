// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sportsbook/commands.proto

package sportsbook

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UpdateStatus struct {
	Type             *string      `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Id               *uint32      `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Status           *EventStatus `protobuf:"varint,3,opt,name=status,enum=sportsbook.EventStatus" json:"status,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *UpdateStatus) Reset()                    { *m = UpdateStatus{} }
func (m *UpdateStatus) String() string            { return proto.CompactTextString(m) }
func (*UpdateStatus) ProtoMessage()               {}
func (*UpdateStatus) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *UpdateStatus) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *UpdateStatus) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *UpdateStatus) GetStatus() EventStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return EventStatus_PRE_TRADING
}

func init() {
	proto.RegisterType((*UpdateStatus)(nil), "sportsbook.UpdateStatus")
}

func init() { proto.RegisterFile("sportsbook/commands.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0x2e, 0xc8, 0x2f,
	0x2a, 0x29, 0x4e, 0xca, 0xcf, 0xcf, 0xd6, 0x4f, 0xce, 0xcf, 0xcd, 0x4d, 0xcc, 0x4b, 0x29, 0xd6,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x48, 0x49, 0x49, 0x23, 0x29, 0x43, 0x30, 0x21,
	0x0a, 0x95, 0x92, 0xb9, 0x78, 0x42, 0x0b, 0x52, 0x12, 0x4b, 0x52, 0x83, 0x4b, 0x12, 0x4b, 0x4a,
	0x8b, 0x85, 0x84, 0xb8, 0x58, 0x4a, 0x2a, 0x0b, 0x52, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83,
	0xc0, 0x6c, 0x21, 0x3e, 0x2e, 0xa6, 0xcc, 0x14, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xde, 0x20, 0xa6,
	0xcc, 0x14, 0x21, 0x7d, 0x2e, 0xb6, 0x62, 0xb0, 0x6a, 0x09, 0x66, 0x05, 0x46, 0x0d, 0x3e, 0x23,
	0x71, 0x3d, 0x24, 0x63, 0x5d, 0xcb, 0x52, 0xf3, 0x4a, 0x20, 0x86, 0x05, 0x41, 0x95, 0x39, 0xc9,
	0x70, 0x49, 0x25, 0xe7, 0xe7, 0xea, 0x25, 0x65, 0x96, 0xa4, 0x27, 0xe6, 0xa6, 0xe6, 0x24, 0x26,
	0x15, 0x23, 0xe9, 0x00, 0x04, 0x00, 0x00, 0xff, 0xff, 0x6c, 0x7a, 0xd6, 0xba, 0xc7, 0x00, 0x00,
	0x00,
}
