// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payments/withdrawal.proto

package payments

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Withdrawal struct {
	Timestamp          *int64   `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	PlayerId           *uint32  `protobuf:"varint,2,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	ClientId           *uint32  `protobuf:"varint,3,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	DestinationAddress *string  `protobuf:"bytes,4,opt,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	TxHash             *string  `protobuf:"bytes,5,opt,name=tx_hash,json=txHash" json:"tx_hash,omitempty"`
	Amount             *float64 `protobuf:"fixed64,6,opt,name=amount" json:"amount,omitempty"`
	Fee                *float64 `protobuf:"fixed64,7,opt,name=fee" json:"fee,omitempty"`
	State              *string  `protobuf:"bytes,8,opt,name=state" json:"state,omitempty"`
	XXX_unrecognized   []byte   `json:"-"`
}

func (m *Withdrawal) Reset()                    { *m = Withdrawal{} }
func (m *Withdrawal) String() string            { return proto.CompactTextString(m) }
func (*Withdrawal) ProtoMessage()               {}
func (*Withdrawal) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Withdrawal) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *Withdrawal) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *Withdrawal) GetClientId() uint32 {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return 0
}

func (m *Withdrawal) GetDestinationAddress() string {
	if m != nil && m.DestinationAddress != nil {
		return *m.DestinationAddress
	}
	return ""
}

func (m *Withdrawal) GetTxHash() string {
	if m != nil && m.TxHash != nil {
		return *m.TxHash
	}
	return ""
}

func (m *Withdrawal) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *Withdrawal) GetFee() float64 {
	if m != nil && m.Fee != nil {
		return *m.Fee
	}
	return 0
}

func (m *Withdrawal) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func init() {
	proto.RegisterType((*Withdrawal)(nil), "payments.Withdrawal")
}

func init() { proto.RegisterFile("payments/withdrawal.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xd0, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc7, 0x71, 0x99, 0xd2, 0x34, 0x39, 0x09, 0x09, 0x19, 0x04, 0xe6, 0xcf, 0x10, 0x31, 0x65,
	0x4a, 0x9f, 0x01, 0x26, 0xba, 0x66, 0x61, 0x8c, 0xae, 0xf5, 0x41, 0x2c, 0xc5, 0x76, 0x94, 0x3b,
	0xd4, 0xf6, 0xa5, 0x79, 0x06, 0x94, 0x98, 0x02, 0x9b, 0x7f, 0xdf, 0x8f, 0xe5, 0xc1, 0x70, 0x37,
	0xe0, 0xd1, 0x53, 0x10, 0x5e, 0xef, 0x9d, 0x74, 0x76, 0xc4, 0x3d, 0xf6, 0xf5, 0x30, 0x46, 0x89,
	0x3a, 0x3f, 0xd1, 0xd3, 0x97, 0x02, 0x78, 0xfb, 0x65, 0xfd, 0x08, 0x85, 0x38, 0x4f, 0x2c, 0xe8,
	0x07, 0xa3, 0x4a, 0x55, 0x2d, 0x9a, 0xbf, 0xa0, 0x1f, 0xa0, 0x18, 0x7a, 0x3c, 0xd2, 0xd8, 0x3a,
	0x6b, 0xce, 0x4a, 0x55, 0x5d, 0x34, 0x79, 0x0a, 0x1b, 0x3b, 0xe1, 0xae, 0x77, 0x14, 0x64, 0xc2,
	0x45, 0xc2, 0x14, 0x36, 0x56, 0xaf, 0xe1, 0xca, 0x12, 0x8b, 0x0b, 0x28, 0x2e, 0x86, 0x16, 0xad,
	0x1d, 0x89, 0xd9, 0x9c, 0x97, 0xaa, 0x2a, 0x1a, 0xfd, 0x8f, 0x9e, 0x93, 0xe8, 0x5b, 0x58, 0xc9,
	0xa1, 0xed, 0x90, 0x3b, 0xb3, 0x9c, 0x2f, 0x65, 0x72, 0x78, 0x45, 0xee, 0xf4, 0x0d, 0x64, 0xe8,
	0xe3, 0x67, 0x10, 0x93, 0x95, 0xaa, 0x52, 0xcd, 0xcf, 0xd2, 0x97, 0xb0, 0x78, 0x27, 0x32, 0xab,
	0x39, 0x4e, 0x47, 0x7d, 0x0d, 0x4b, 0x16, 0x14, 0x32, 0xf9, 0xfc, 0x40, 0x1a, 0x2f, 0xf7, 0x60,
	0x76, 0xd1, 0xd7, 0x5b, 0x27, 0x1f, 0xe8, 0xa9, 0xc7, 0x2d, 0xd7, 0xa7, 0xcf, 0xf8, 0x0e, 0x00,
	0x00, 0xff, 0xff, 0x1d, 0xe5, 0xb9, 0x81, 0x32, 0x01, 0x00, 0x00,
}
