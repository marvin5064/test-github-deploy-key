// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internalrpc/betradar_broker.proto

/*
Package internalrpc is a generated protocol buffer package.

It is generated from these files:
	internalrpc/betradar_broker.proto
	internalrpc/currency_worker.proto
	internalrpc/distribution_engine.proto
	internalrpc/generic.proto
	internalrpc/img_sync.proto
	internalrpc/iosport-sync.proto
	internalrpc/iosport_broker.proto
	internalrpc/market_manager.proto
	internalrpc/pinnacle_broker.proto
	internalrpc/pinnacle_worker.proto
	internalrpc/pricing_engine.proto
	internalrpc/result_worker.proto
	internalrpc/risk_manager.proto
	internalrpc/sportsbook_api.proto
	internalrpc/sportsbook_monitor.proto
	internalrpc/sportsentities_manager.proto

It has these top-level messages:
	ExchangeRateReply
	ExchangeRateRequest
	BitcoinFeeRequest
	BitcoinFeeReply
	MultipleCompetition
	MultipleCompetitionList
	EvictionRequest
	GetMultipleCompetitionListKeyRequest
	GetMultipleCompetitionListKeyReply
	CompetitionList
	CompetitionLists
	SetMultipleCompetitionListTranslationRequest
	Uint32List
	SingleId
	Double
	HealthCheckResponse
	DgeTokenRequest
	DgeTokenResponse
	StakesAndOddsRequest
	LiabilityRequest
	LiabilityReply
	StakesAndOddsReply
	IsRestrictedRequest
	IsRestrictedReply
	GradeRequest
	GradeReply
	MultipleGradesReply
	PriorityRequest
	PriorityReply
	OverlayedCompetitionSetting
	OverlayedCompetitionSettingsReply
	OutcomesRequest
	OutcomesReply
	SetMarketRequest
	GetMarketRequest
	Market
	CompetitionSettingRequest
	CompetitionSettingReply
	CompetitionSettingList
	CategorySettingRequest
	CategorySettingReply
	CategorySettingList
	Selection
	Line
	PinnacleLiveStatusReply
	SpecialMarketRequest
	SpecialMarketsForEventRequest
	BlockedSpecialMarketsList
	BetSelectionRequest
	BetradarSelectionData
	PinnacleSelectionData
	IosportSelectionData
	BetSelectionReply
	GetSelectionRequest
	BatchGetSelectionsRequest
	SelectionReply
	SelectionsReply
	Filter
	OverlayedEntity
	BettingOverlay
	Overlay
	BettingOverlays
	EntityBettingOverlays
	MarketOverlays
	RemoveBettingOverlayRequest
	DetailedLookup
	GetBettingOverlayRequest
	BatchGetBettingOverlayRequest
	PlayerRequest
	PlayerReply
	RestrictedIDs
	SetLockingStatusRequest
	OverrideSelectionStatusRequest
	OverrideSelectionStatusReply
	FullLockingStatusReply
	LockingStatus
	KeepAliveRequest
	Competitors
	Pitchers
	Competition
	Competitor
	EventIdentifier
	EventStateUpdateRequest
	CancelEventRequest
	EventStateReply
	ExtraField
	FetchOrCreateEntityReply
	FetchOrCreateEventRequest
	UpdateOrCreateOutrightResponse
	UpdateOrCreateOutrightRequest
	FetchOrCreateGroupRequest
	FetchOrCreateCompetitionRequest
	FetchOrCreateSportRequest
	FetchOrCreateCompetitorRequest
	UpdateEventRequest
	UpdateEventRequestV2
	UpdateMetadataRequest
	UpdateEventReply
	StatusRequest
	TranslationRequest
	TranslationReply
	EntityRequest
	EntitiesRequest
	EventReply
	Group
	CompetitionReply
	OutrightReply
	CompetitorReply
	GroupReply
	SportReply
	MatchingOverviewRequest
	MatchingOverviewReply
	ModifyGroupsOnEntityRequest
	AddCategoryOnEntityRequest
	CompetitionProviderOutrightRequest
	CompetitionProviderOutrightReply
	CancelledMarketListRequest
	MergeRequest
	UnmergeRequest
	GetMergedEntitiesRequest
	GetCompetitorsReply
	GetCompetitionsReply
	TranslationMap
	TranslationMaps
	MatchCompetitionRequest
	UnmatchCompetitionRequest
	GetMatchedCompetitionsRequest
	GetUnmatchedCompetitionsRequest
	MatchCompetitorRequest
	UnmatchCompetitorRequest
	GetMatchedCompetitorsRequest
	GetUnmatchedCompetitorsRequest
	MatchEventRequest
	GetMatchedEventsRequest
	GetUnmatchedEventsRequest
	SearchCompetitionsRequest
	ManagingProvider
	SetManagingProviderRequest
	ListRequest
	UpcomingEventsRequest
	UpcomingEventResponse
	UpcomingEventsResponse
	ActiveEventRequest
	EventsReply
	OutrightsReply
	EventFeatureAvailabilityRequest
*/
package internalrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import bet "github.com/bitgaming/go-protobuf-schema/sportsbook/bet"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BetradarBroker service

type BetradarBrokerClient interface {
	PlaceBet(ctx context.Context, in *bet.BetRequest, opts ...grpc.CallOption) (*bet.BetResponse, error)
	CancelBet(ctx context.Context, in *bet.BetRequest, opts ...grpc.CallOption) (*bet.BetResponse, error)
}

type betradarBrokerClient struct {
	cc *grpc.ClientConn
}

func NewBetradarBrokerClient(cc *grpc.ClientConn) BetradarBrokerClient {
	return &betradarBrokerClient{cc}
}

func (c *betradarBrokerClient) PlaceBet(ctx context.Context, in *bet.BetRequest, opts ...grpc.CallOption) (*bet.BetResponse, error) {
	out := new(bet.BetResponse)
	err := grpc.Invoke(ctx, "/internalrpc.BetradarBroker/PlaceBet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *betradarBrokerClient) CancelBet(ctx context.Context, in *bet.BetRequest, opts ...grpc.CallOption) (*bet.BetResponse, error) {
	out := new(bet.BetResponse)
	err := grpc.Invoke(ctx, "/internalrpc.BetradarBroker/CancelBet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BetradarBroker service

type BetradarBrokerServer interface {
	PlaceBet(context.Context, *bet.BetRequest) (*bet.BetResponse, error)
	CancelBet(context.Context, *bet.BetRequest) (*bet.BetResponse, error)
}

func RegisterBetradarBrokerServer(s *grpc.Server, srv BetradarBrokerServer) {
	s.RegisterService(&_BetradarBroker_serviceDesc, srv)
}

func _BetradarBroker_PlaceBet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(bet.BetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BetradarBrokerServer).PlaceBet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internalrpc.BetradarBroker/PlaceBet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BetradarBrokerServer).PlaceBet(ctx, req.(*bet.BetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BetradarBroker_CancelBet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(bet.BetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BetradarBrokerServer).CancelBet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internalrpc.BetradarBroker/CancelBet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BetradarBrokerServer).CancelBet(ctx, req.(*bet.BetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BetradarBroker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "internalrpc.BetradarBroker",
	HandlerType: (*BetradarBrokerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PlaceBet",
			Handler:    _BetradarBroker_PlaceBet_Handler,
		},
		{
			MethodName: "CancelBet",
			Handler:    _BetradarBroker_CancelBet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internalrpc/betradar_broker.proto",
}

func init() { proto.RegisterFile("internalrpc/betradar_broker.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0xce, 0x41, 0xaa, 0xc2, 0x30,
	0x10, 0xc6, 0xf1, 0xb7, 0x7a, 0x68, 0x04, 0x95, 0xac, 0xa4, 0xe2, 0x42, 0x0f, 0x90, 0x8a, 0xde,
	0x20, 0x5e, 0x40, 0xbc, 0x80, 0x4c, 0xe2, 0x20, 0xa5, 0x69, 0x26, 0xce, 0x8c, 0xf7, 0x97, 0x56,
	0xc1, 0x2e, 0x5d, 0xcc, 0x66, 0xf8, 0xfd, 0xe1, 0x33, 0xdb, 0x26, 0x2b, 0x72, 0x86, 0xc4, 0x25,
	0xd6, 0x01, 0x95, 0xe1, 0x06, 0x7c, 0x0d, 0x4c, 0x2d, 0xb2, 0x2b, 0x4c, 0x4a, 0x76, 0x36, 0x22,
	0xd5, 0x4a, 0x0a, 0xb1, 0x4a, 0x20, 0x6a, 0x7b, 0xde, 0xdf, 0x9b, 0x1d, 0xc4, 0xcc, 0xfd, 0xa7,
	0xf7, 0x43, 0x6e, 0x6b, 0x33, 0x39, 0x27, 0x88, 0xe8, 0x51, 0xed, 0xc2, 0xf5, 0xd2, 0xa3, 0x5e,
	0xf0, 0xf1, 0x44, 0xd1, 0x6a, 0xf9, 0x7d, 0x48, 0xa1, 0x2c, 0xb8, 0xfb, 0xb3, 0x7b, 0x33, 0x3d,
	0x41, 0x8e, 0x98, 0x7e, 0x2d, 0xfc, 0xc6, 0xac, 0x23, 0x75, 0x2e, 0x34, 0x7a, 0x87, 0x0e, 0x13,
	0x04, 0x71, 0xa3, 0xb5, 0xe1, 0x7f, 0x98, 0x76, 0x7c, 0x05, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x66,
	0x42, 0xc3, 0xe6, 0x00, 0x00, 0x00,
}
