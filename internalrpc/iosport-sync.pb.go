// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internalrpc/iosport-sync.proto

package internalrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for IoSportSync service

type IoSportSyncClient interface {
	RefreshEventMetadata(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
}

type ioSportSyncClient struct {
	cc *grpc.ClientConn
}

func NewIoSportSyncClient(cc *grpc.ClientConn) IoSportSyncClient {
	return &ioSportSyncClient{cc}
}

func (c *ioSportSyncClient) RefreshEventMetadata(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/internalrpc.IoSportSync/RefreshEventMetadata", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for IoSportSync service

type IoSportSyncServer interface {
	RefreshEventMetadata(context.Context, *google_protobuf1.Empty) (*google_protobuf1.Empty, error)
}

func RegisterIoSportSyncServer(s *grpc.Server, srv IoSportSyncServer) {
	s.RegisterService(&_IoSportSync_serviceDesc, srv)
}

func _IoSportSync_RefreshEventMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoSportSyncServer).RefreshEventMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internalrpc.IoSportSync/RefreshEventMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoSportSyncServer).RefreshEventMetadata(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _IoSportSync_serviceDesc = grpc.ServiceDesc{
	ServiceName: "internalrpc.IoSportSync",
	HandlerType: (*IoSportSyncServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RefreshEventMetadata",
			Handler:    _IoSportSync_RefreshEventMetadata_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internalrpc/iosport-sync.proto",
}

func init() { proto.RegisterFile("internalrpc/iosport-sync.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 164 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xcb, 0xcc, 0x2b, 0x49,
	0x2d, 0xca, 0x4b, 0xcc, 0x29, 0x2a, 0x48, 0xd6, 0xcf, 0xcc, 0x2f, 0x2e, 0xc8, 0x2f, 0x2a, 0xd1,
	0x2d, 0xae, 0xcc, 0x4b, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x46, 0x92, 0x97, 0x92,
	0x4e, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x4b, 0x25, 0x95, 0xa6, 0xe9, 0xa7, 0xe6, 0x16,
	0x94, 0x54, 0x42, 0x54, 0x1a, 0x85, 0x73, 0x71, 0x7b, 0xe6, 0x07, 0x83, 0xf4, 0x07, 0x57, 0xe6,
	0x25, 0x0b, 0x79, 0x70, 0x89, 0x04, 0xa5, 0xa6, 0x15, 0xa5, 0x16, 0x67, 0xb8, 0x96, 0xa5, 0xe6,
	0x95, 0xf8, 0xa6, 0x96, 0x24, 0xa6, 0x24, 0x96, 0x24, 0x0a, 0x89, 0xe9, 0x41, 0x0c, 0xd1, 0x83,
	0x19, 0xa2, 0xe7, 0x0a, 0x32, 0x44, 0x0a, 0x87, 0xb8, 0x12, 0x83, 0x93, 0x2c, 0x97, 0x74, 0x72,
	0x7e, 0xae, 0x5e, 0x52, 0x66, 0x49, 0x7a, 0x62, 0x6e, 0x6a, 0x4e, 0x62, 0x52, 0xb1, 0x1e, 0x92,
	0xa3, 0x92, 0xd8, 0xc0, 0x1a, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb8, 0x7d, 0x3a, 0x3c,
	0xca, 0x00, 0x00, 0x00,
}
