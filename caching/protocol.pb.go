// Code generated by protoc-gen-go. DO NOT EDIT.
// source: caching/protocol.proto

/*
Package caching is a generated protocol buffer package.

It is generated from these files:
	caching/protocol.proto

It has these top-level messages:
	Command
*/
package caching

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Command_Actions int32

const (
	Command_FLUSH Command_Actions = 0
	Command_WRITE Command_Actions = 1
)

var Command_Actions_name = map[int32]string{
	0: "FLUSH",
	1: "WRITE",
}
var Command_Actions_value = map[string]int32{
	"FLUSH": 0,
	"WRITE": 1,
}

func (x Command_Actions) Enum() *Command_Actions {
	p := new(Command_Actions)
	*p = x
	return p
}
func (x Command_Actions) String() string {
	return proto.EnumName(Command_Actions_name, int32(x))
}
func (x *Command_Actions) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Command_Actions_value, data, "Command_Actions")
	if err != nil {
		return err
	}
	*x = Command_Actions(value)
	return nil
}
func (Command_Actions) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Command struct {
	Timestamp *int64  `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Origin    *string `protobuf:"bytes,2,opt,name=origin" json:"origin,omitempty"`
	// URL shall map to the frontend resources:
	//   stg.cloudbet.com/en/sports/event/1234678
	//   stg.cloudbet.com/en/sports/outright/1234
	//   stg.cloudbet.com/en/sports/competition/1
	Url              *string          `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	Action           *Command_Actions `protobuf:"varint,4,opt,name=action,enum=caching.Command_Actions" json:"action,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Command) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *Command) GetOrigin() string {
	if m != nil && m.Origin != nil {
		return *m.Origin
	}
	return ""
}

func (m *Command) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *Command) GetAction() Command_Actions {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return Command_FLUSH
}

func init() {
	proto.RegisterType((*Command)(nil), "caching.Command")
	proto.RegisterEnum("caching.Command_Actions", Command_Actions_name, Command_Actions_value)
}

func init() { proto.RegisterFile("caching/protocol.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 193 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4b, 0x4e, 0x4c, 0xce,
	0xc8, 0xcc, 0x4b, 0xd7, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0xce, 0xcf, 0xd1, 0x03, 0x33, 0x84,
	0xd8, 0xa1, 0xe2, 0x4a, 0x4b, 0x18, 0xb9, 0xd8, 0x9d, 0xf3, 0x73, 0x73, 0x13, 0xf3, 0x52, 0x84,
	0x64, 0xb8, 0x38, 0x4b, 0x32, 0x73, 0x53, 0x8b, 0x4b, 0x12, 0x73, 0x0b, 0x24, 0x18, 0x15, 0x18,
	0x35, 0x98, 0x83, 0x10, 0x02, 0x42, 0x62, 0x5c, 0x6c, 0xf9, 0x45, 0x99, 0xe9, 0x99, 0x79, 0x12,
	0x4c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x50, 0x9e, 0x90, 0x00, 0x17, 0x73, 0x69, 0x51, 0x8e, 0x04,
	0x33, 0x58, 0x10, 0xc4, 0x14, 0x32, 0xe0, 0x62, 0x4b, 0x4c, 0x2e, 0xc9, 0xcc, 0xcf, 0x93, 0x60,
	0x51, 0x60, 0xd4, 0xe0, 0x33, 0x92, 0xd0, 0x83, 0xda, 0xa6, 0x07, 0xb5, 0x49, 0xcf, 0x11, 0x2c,
	0x5d, 0x1c, 0x04, 0x55, 0xa7, 0x24, 0xcf, 0xc5, 0x0e, 0x15, 0x12, 0xe2, 0xe4, 0x62, 0x75, 0xf3,
	0x09, 0x0d, 0xf6, 0x10, 0x60, 0x00, 0x31, 0xc3, 0x83, 0x3c, 0x43, 0x5c, 0x05, 0x18, 0x9d, 0x24,
	0xb9, 0xc4, 0x93, 0xf3, 0x73, 0xf5, 0x92, 0x32, 0x4b, 0xd2, 0x13, 0x73, 0x53, 0x73, 0x12, 0x93,
	0x8a, 0x61, 0x66, 0x02, 0x02, 0x00, 0x00, 0xff, 0xff, 0x02, 0x0e, 0xd1, 0xb1, 0xe3, 0x00, 0x00,
	0x00,
}
